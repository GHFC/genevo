# Declare the stages
stages:
  - lint
  - build
  - deploy

# Cache node modules in between jobs
cache:
  paths:
    - .npm/

services:
  - registry-gitlab.pasteur.fr/dsi-tools/docker-images/docker:dind

variables:
  DOCKER_HOST: tcp://localhost:2375/

# Lint the code but only return a warning
lint:
  stage: lint
  image: node:12.19
  allow_failure: true
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run lint
  tags:
    - linting

# Build the docker image and store it the gitlab registery
build:
  stage: build
  image: registry-gitlab.pasteur.fr/dsi-tools/docker-images/docker:latest
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/polls:${CI_COMMIT_SHORT_SHA}" .
    - docker tag "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/polls:${CI_COMMIT_SHORT_SHA}" "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/polls:latest"
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/polls:${CI_COMMIT_SHORT_SHA}"
  tags:
    - k8s

# Deploy on Kubernetes
deploy:
  stage: deploy
  image: registry-gitlab.pasteur.fr/dsi-tools/docker-images:docker_kubernetes_image
  variables:
    NAMESPACE: ${CI_PROJECT_NAME}-dev
  environment:
    name: ${CI_PROJECT_NAME}-dev
    url: https://${CI_PROJECT_NAME}-dev.pasteur.cloud
  script:
    - kubectl delete secret registry-gitlab -n ${NAMESPACE} --ignore-not-found=true
    - kubectl create secret docker-registry -n ${NAMESPACE} registry-gitlab --docker-server=registry-gitlab.pasteur.fr --docker-username=${DEPLOY_USER} --docker-password=${DEPLOY_TOKEN} --docker-email=kubernetes@pasteur.fr
    - envsubst < postgresql.yaml | kubectl apply -n ${NAMESPACE} -f -
    - kubectl wait --for=condition=available --timeout=600s deployment/postgresql
    - kubectl delete job polls-migrations -n ${NAMESPACE} --ignore-not-found=true
    - envsubst < job.yaml | kubectl apply -n ${NAMESPACE} -f -
    - kubectl wait --for=condition=complete --timeout=600s job/polls-migrations
    - envsubst < polls.yaml | kubectl apply -n ${NAMESPACE} -f -
    - kubectl patch deployment polls -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
  tags:
    - k8s
  only:
    refs:
      - dev
